<?xml version="1.0"?>
<?xml-stylesheet type="application/xml" href="../../framexs/framexs.xsl"?>
<?framexs.commands ../../commands.xml?>
<?framexs.properties ../../properties/lp-a.properties.xml?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja">
<head>
<title>データ事業(A)</title>
<meta name="description" content="XML、CSV、JSONのデータを加工、合成する業務を請け負うことを書いています。"/>
</head>
<body id="main">
<article>
<section>
<h2>JSONかXMLか、あるいはCSVか</h2>
<p>あるデータをどのフォーマットで表すか…悩ましいものです。<br/>
例えばNode.jsプロジェクトを表すデータはJSONで書きます。</p>
<pre><code class="language json">{
    "name": "yaohata",
    "version": "0.5.0",
    "description": "八百幡のウェブサイト",
    "main": "index.js",
    "scripts": {
        "server": "node index.js",
        "test": "echo \"Error: no test specified\" &amp;&amp; exit 1"
    }
}</code></pre>
<p>これはXMLで完全に再現できます。</p>
<pre><code class="language xml"><![CDATA[<map>
    <string key="name">yaohata</string>
    <string key="name">0.5.0</string>
    <string key="name">八百幡のウェブサイト</string>
    <string key="main">index.js</string>
    <array key="scripts">
        <string key="server">node index.js</string>
        <string key="test">echo \"Error: no test specified\" && exit 1</string>
    </array>
</map>]]></code></pre>
<p>よりXMLらしくスキーマを設定するならこうなるでしょう。</p>
<pre><code class="language xml"><![CDATA[<package>
    <name>yaohata</name>
    <version>0.5.0</version>
    <description>八百幡のウェブサイト</description>
    <main>index.js</main>
    <scripts>
        <script name="server">node index.js</script>
        <script name="test">echo \"Error: no test specified\" && exit 1</script>
    </scripts>
</package>]]></code></pre>
<p>他には<mark>YAML</mark>で書くという方法もあります。</p>
<p>多様なデータ表現形式がある以上、悩みは尽きません。</p>
</section>
<section>
<h2>進化したデータ処理技術</h2>
<p>一方で、<mark>データ処理</mark>を取り巻く環境は<strong><mark>XSLT</mark>を中心に進化</strong>しています。</p>
<p><mark>Java</mark>で動くライブラリは多種多様であり、<mark>XSLT3.0</mark>を実装している<mark>Saxon-HE</mark>によって<mark>JSON</mark>も含めて非常に高度なデータ加工が可能になっています。<br/>
さらに、JavaはXSLT処理を行う上で柔軟であるため、XSLTの対象はXMLだけでなく<mark>HTML</mark>や<mark>CSV</mark>にも及びます。</p>
<p>Javaでは<mark>DOM</mark>をソースとしてXSLT処理ができるので、<mark>HTMLパーサー</mark>を通して<strong>HTMLのXSLT処理</strong>を可能にします。</p>
<pre><code class="language java">var parser = new nu.validator.htmlparser.dom.HtmlDocumentBuilder();
var doc = parser.parse(Files.newInputStream(input));
transformer.transform(new DOMSource(doc),new StreamResult(Files.newOutputStream(output)));</code></pre>
<p>また<strong>CSVを処理することも可能</strong>です。配列としてパースした後にいったんDOMへと変換することでXSLT処理が可能です。</p>
<pre><code class="language java">var list = Csv.load(Files.newInputStream(input), new CsvConfig(), new StringArrayListHandler());</code></pre>
<pre><code class="language csv"><![CDATA[<csv xmlns="urn:csvml">
<record><field>1</field><field>東京</field></record>
<record><field>2</field><field>大阪</field></record>
</csv>
]]></code></pre>
<p>このように今の技術であればXML、HTML、JSON、CSVに関係なく。</p>
<p>そして私は今、<strong>XSLT製のフレームワーク</strong>の<mark>Framexs</mark>という、XMLの機能をフル活用するソフトを開発しています。<br/>
    このFramexsは<strong>XMLを合成する</strong>アーキテクチャを持っています。例えば、今あなたが見ているこのページの冒頭部分を示します。</p>
<div class="code-container">
<pre><code class="language xml"><![CDATA[<?xml version="1.0"?>
<?xml-stylesheet type="application/xml" href="../../framexs/framexs.xsl"?>
<?framexs.commands ../../commands.xml?>
<?framexs.properties ../../properties/lp-a.properties.xml?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja">]]>
</code></pre>
</div>
<p>先頭の<code>&lt;?xml ...</code>は何でしょうか？これは、このページがXMLであることを示すための<mark>XML宣言</mark>です。<br/>
htmlタグに<mark>名前空間</mark>もあるので、これは<mark>XHTML</mark>ですね。<br/>
では<code>&lt;xml-stylesheet ...</code>と<code>&lt;?framexs...</code>となっているのは？<br/>
これらはXMLの<mark>処理命令</mark>で、特に<code>xml-stylesheet</code>は<mark>スタイルシート</mark>を指定するもので、この場合では<mark>XSL</mark>ファイルを指定しています。<br/>
そしてXSLT処理を施して、今ブラウザを通して今あなたの前に現れているというわけです。</p>
<p>このように最新の技術によってデータは分離から統合まで細部にわたって思い通りに変化させることができます。</p>
</section>
<section>
<h2>データ事業</h2>
<p>ここで事業の提案をいたします。<br/>
もしデータ処理にお悩みなら私に任せてくれませんか。<br/>
私の技術知識を活かして課題を解決します。</p>
<internal-quote path="business.xhtml" target="データ事業"/>
<internal-quote path="business.xhtml" target="営業"/>
<internal-quote path="info.xhtml" target="連絡先"/>
<p>お問い合わせフォームは<a class="contact" href="https://docs.google.com/forms/d/e/1FAIpQLSeK-UPUkQM_LhzfREtC6RKYsHTgUSsZjNwAKe97XjhOWNtfWA/viewform">こちら</a>から。</p>
</section>
</article>
</body>
</html>