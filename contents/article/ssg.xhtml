<?xml version="1.0"?>
<?xml-stylesheet type="application/xml" href="../../framexs.xsl"?>
<?framexs.skeleton-setting ../../skeleton-setting.xml?>
<?framexs.properties ../../properties/properties.xml?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja">
<head>
<meta charset="UTF-8"/>
<title>SSGとFramexsの比較</title>
<meta name="description" content="SSGとFramexsの比較"/>
<meta name="modified" content="2022-04-04"/>
</head>
<body>
<article>
<section id="main">
<section>
<p>フロントエンドでの最近の状況については近年、静的サイトが注目を集めています。<br/>
静的サイトとは、WordPressのようなプログラミングによってコンテンツが提供される、いわゆる動的サイトと比較して、静的ページのみで構築されたウェブサイトの事です。</p>

<p>昔の、原始的なウェブの1990年代のサイト運営はいわゆる個人サイトなどは静的サイトも多いものでした。<br/>
しかし、多数のHTMLを管理する煩雑さが問題となって、動的ページを提供する動的サイトが主流となりました。<br/>
動的サイトの代表例としてはCMSのPHP製のWordPressがあります。</p>

<p>そして、近年になって再び静的サイトが注目され始めています。<br/>
その理由としては、GitHub Pagesのような無料で静的サイトを構築できる環境が整い始めていることが、要因として上げられるでしょう。<br/>
GitHub Pages以外にもNetlify、Fireworksなど、無料でビルドできる機能を追加したサービスもあります。</p>

<p>静的サイトの開発、構築について、現在の主流ではStatic Site Generater(SSG)を使ってビルドを行うのが普通となっています。<br/>
SSGとしてはGatsby、Next.jsなど多数あります。<br/>
そしてこのSSGはSass、ScssなどCSSメタ言語や、TypeScriptなどAltJSの使用と相性がいいものです。<br/>
このように静的サイトにもSSGにも多種多様な選択肢が存在することによって次第に盛り上がってきています。</p>

<p>これらの技術は革新的であるものの、一方でデメリット、欠点も抱えているのも確かです。<br/>
SSGはビルドが必要とされるあまり、サービスが限定されます。</p>

<p>ここでFramexsという、XSLTによるフレームワークがそれら各種問題点を解消しつつ、高い管理運用性を持っている技術があるので、この機会にぜひ知っていただきたいです。<br/>
このフレームワークでは、個別の静的ページが表示されるたびに、XSLT処理によってテンプレートとコンテンツの合成を行うことで、完成したHTMLを出力する手法を取っています。<br/>
このためFramexsでは、ビルドレスなサイト管理が可能となっていて、SPAと比べて個別ページがクローラーに拾われるのでSEOに強いという特徴があります。<br/>
さらに、変更は即時反映されるので開発簡易性が特段に高いという点も、特筆すべき特徴としてあげられます。</p>

<p>事実、このページ、そして、このサイト全体がFramexsを使っているため、劇的に簡易な運用ができています。
このサイトではFramexsの参照実装として存在するとともに、解説記事Framexsの基礎も用意していますので、ぜひとも活用なさってください。</p>
<div data-url="../framexs-base/index.xhtml"></div>
</section>
<section>
<h2>Fremexsを使う意義</h2>
<p>Fremexsの強みは、<i>link</i>要素や<i>script</i>要素などの記述のあるテンプレートを、全てのページで簡単に共有できる点が挙げられる。
<br/><br/>
例えば、次のようなコードを記述したい場合、</p>
<div class="code-container">
<div class="captioon">コード5</div>
<pre><code class="language xml c7"><![CDATA[<!-- Google Tag Manager -->
<script>(function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
	new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
	j=d.createElement(s),dl=l!='dataLayer'?'&amp;l='+l:'';j.async=true;j.src=
	'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
	})(window,document,'script','dataLayer','GTM-5L2SQ9B');</script>
<!-- End Google Tag Manager -->]]></code></pre>
</div>
<p>この記述をHTMLファイルに挿入する場合、<strong>全ての</strong>HTMLにこの記述を挿入して、上書き保存する必要があります。
<br/><br/>
つまり、プログラムに変更があった場合、そのたびに全てのHTMLを書き換えることが必要となります。1～2ページ程度の小規模な個人サイトならまだしも、何百・千とページがある大規模なサイトでは、対応するのは極めて困難です。
<br/>
<br/>
しかしFramexsを使えば、テンプレートを書き換えるだけで全てのHTMLに適応されるため、作業工程の大幅短縮が可能です。</p>
</section>
<section>
<h2>Buildless性</h2>
<p>FramexsはBuildless（ビルド不要）である。<br/><i>Node.js</i>コマンドに頼らずとも静的サイトの簡易な構築を可能にする。</p>
</section>
</section>
</article>
</body>
</html>