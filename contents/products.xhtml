<?xml version="1.0"?>
<?xml-stylesheet type="application/xml" href="../../framexs/framexs.xsl"?>
<?framexs.commands ../../commands.xml?>
<?framexs.properties ../../properties/toppage.xml?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja">
<head>
<title>製品一覧</title>
</head>
<body id="main">
<article>
<dl>
<dt>Framexs</dt>
<dd><p>モデルとビューの両方ともXHTMLを使い、ウェブサイトではコントローラーもXHTMLに処理命令という形で埋めこんでいます。

    [ナンダカフラリ](https://github.com/nandaka-furari)氏によって作られました。[原作](https://github.com/nandaka-furari/framexs)
    
    このフレームワークは、フロントエンドXSLT技術であるxml-stylesheet処理命令を利用しています。<a href="https://github.com/inomoto-hironobu/framexs">https://github.com/inomoto-hironobu/framexs</a><br/>
    ナンダカフラリ氏が創作したXSLT製のフレームワーク。現在は私一人が開発を進めています。</p></dd>
<dt>F4W</dt>
<dd><p><a href="https://github.com/inomoto-hironobu/framexs4wordpress">https://github.com/inomoto-hironobu/f4w</a><br/>
    WordPressでFramexsを使用する機能を持ったテーマ。XHTMLやXMLの出力をするようプログラムされている。設定パネルで、ディレクトリの設定を行うことでFramexsテーマ機能を使うことができます。

    Framexsテーマを収めているディレクトリの場所、propertiesファイルを収めているディレクトリの場所を設定します。
    
    このことによってHTML設計、CSS、JavaScriptのセットをWordPressの外に出すことができ、
    例えば、スタティックサイトとWordPressサイトでスタイルを共有することができます。
    
    CMS固有の記述に縛られることなく、フロントエンジニアはコードの作製に専念できることを意味します。</p></dd>
<dt>八百幡コンポーネンツ</dt>
<dd><p>Web Componentsテクノロジーによって、HTMLに簡単に様々なカスタム要素を導入できるように開発されています。<a href="https://github.com/inomoto-hironobu/components">https://github.com/inomoto-hironobu/components</a><br/>
    Web Componentsの技術でカスタム要素をいくつも定義しています。テンプレート処理にXSLT3.0を利用しています。</p>
</dd>
<dt>XFacade</dt>
<dd><p>JSではXPathのために標準でevaluate関数がありますが、使い勝手が悪いので、使いやすくするAPIを提供するライブラリです。<a href="https://github.com/inomoto-hironobu/xfacade">XFacade</a></p>
</dd>
</dl>
</article>
</body>
</html>