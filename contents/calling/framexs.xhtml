<?xml version="1.0"?>
<?xml-stylesheet type="application/xml" href="../../framexs/framexs.xsl"?>
<?framexs.commands ../../commands.xml?>
<?framexs.properties ../../properties/calling.properties.xml?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja">
<head>
<title>Framexs事業(A)</title>
<meta name="description" content="「フロントエンド革命が起きた」「XMLとXSLTの時代が来る」未来技術Framexsを体感しましょう。Framexsに関するビジネスについての記事。"/>
<meta name="modified" content="2022-03-20"/>
</head>
<body id="main">
<article>
<section>
<div class="code-container">
<pre><code class="language xml"><![CDATA[<?xml version="1.0"?>
<?xml-stylesheet type="application/xml" href="../../framexs/framexs.xsl"?>
<?framexs.commands ../../commands.xml?>
<?framexs.properties ../../properties/lp-a.properties.xml?>
<html xmlns="http://www.w3.org/1999/xhtml" lang="ja">]]>
</code></pre>
</div>
<p>このコードは今あなたが見ている、このページの冒頭部分です。</p>
<p>先頭の<code>&lt;?xml ...</code>は何でしょうか？これは、このページが<strong>XML</strong>であることを示すための<strong>XML宣言</strong>です。<br/>
htmlタグに<strong>名前空間</strong>もあるので、これは<strong>XHTML</strong>ですね。<br/>
では<code>&lt;xml-stylesheet ...</code>と<code>&lt;?framexs...</code>となっているのは？<br/>
これらはXMLの<strong>処理命令</strong>で、特にxml-stylesheetは<strong>スタイルシート</strong>を指定するもので、この場合では<strong>XSLT</strong>ファイルを指定しています。<br/>
framexs...は<strong>Framexs</strong>で使うためのものです。</p>
</section>
<section>
<h2>XSLTフレームワーク、Framexs</h2>
<p>Framexsとは、クライアントサイドでテンプレートとコンテンツを<strong>合成</strong>し、HTMLを生成する、XSLTで書かれた<strong>フレームワーク</strong>です。<br/>
ナンダカフラリ氏が原作を作り、現在では私一人で開発しています。</p>
<p><a href="https://github.com/inomoto-hironobu/framexs">https://github.com/inomoto-hironobu/framexs</a></p>
<p>要素、属性の構成を<strong>FTML</strong>というテンプレートに集約させることで再利用、つまりコードを使いまわす仕組みです。<br/>
このページもFTMLを利用しています。その一部、titleタグのコードはこうなっています。</p>
<pre class="code-container"><code class="language xml"><![CDATA[<title><framexs:title/> - <framexs:property name="site-name"/></title>]]></code></pre>
<p>これによって、例えば、静的サイトを管理するにあたっては、煩雑さを消しつつ自由でありながらWordPressのような動的サイトに匹敵する劇的なコンテンツの運用簡易性をもたらします。<br/>
もちろん、WordPressのような動的サイトと組み合わせることもできます。</p>
<p>Framexsには<strong>テーマ機能</strong>があり、テンプレート、CSS、JavaScriptをまとめてパッケージングすることができます。<br/>
このサイトでも<a href="https://github.com/inomoto-hironobu/yaohata">八百幡テーマ</a>を使っています。<br/>
このテーマ機能によって、静的サイトか動的サイトかの垣根を越えます。<br/>
例えば、WordPress用に作ったデザインをGitHub Pagesに適用する、あるいはその逆もできる、ということです。</p>
<p>これはHTML力などフロントエンド技術を製品として形にする、ということを意味します。<br/>
なのでGitHubでオープンソースとして公開することもできますし、製品をアマゾンなどマーケットプレイスに登録して販売することもできます。</p>
</section>
<section>
<h2>XMLの時代が来る！</h2>
<pre class="code-container"><code class="language xml"><![CDATA[<?xml version="1.0"?>
<framexs:properties xmlns:framexs="urn:framexs" xmlns="http://www.w3.org/1999/xhtml">
<framexs:property name="site-name">八百幡</framexs:property>]]></code></pre>
<p>このコードはFramexsのもう一つの機能、<strong>プロパティ機能</strong>の、このページで実際に使っているコードです。
このようにFramexsは<strong>XML技術</strong>をふんだんに使っています。<br/>
一方で現在のHTML情勢は<strong>HTML Living Standard</strong>が仕様となっていますが、これはとても制御できる代物ではありません。<br/>
早晩<strong>破綻</strong>します。<br/>
そして<strong>XML Schema</strong>や<strong>Relaxng</strong>で定義される、<strong>XML化</strong>の波が訪れるでしょう。<br/>
XMLは未来技術として、これからのIT世界で新たな時代の主役となるのです。<br/>
HTMLだけ書けても価値はありません。未来技術を手に入れ、ITエンジニアの最先端へ行きましょう！周りとの差を付ける時です！</p>
</section>
<section>
<h2>Framexsの独学</h2>
<p>このサイトでは無料でFramexsを学習できるように、学習コンテンツを用意しています。<br/>
Framexsについてより知りたい方は私が書いたFramexsについての記事を読んでください。<br/>
今後ともコンテンツの充実をしていくので質問等気軽にお寄せください。</p>
<internal-ogp path="../../framexs/index.xhtml"/>
</section>
</article>
</body>
</html>